//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Base;
using SubstrateNetApi.Model.Calls;
using SubstrateNetApi.Model.PalletElectionProviderMultiPhase;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.SpNposElections;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.PalletElectionProviderMultiPhase
{
    
    
    /// <summary>
    /// >> 140 - Variant[pallet_election_provider_multi_phase.pallet.Call]
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class PalletElectionProviderMultiPhaseCall
    {
        
        /// <summary>
        /// >> submit_unsigned
        /// </summary>
        public GenericExtrinsicCall SubmitUnsigned(SubstrateNetApi.Model.PalletElectionProviderMultiPhase.RawSolution raw_solution, SubstrateNetApi.Model.PalletElectionProviderMultiPhase.SolutionOrSnapshotSize witness)
        {
            return new GenericExtrinsicCall("ElectionProviderMultiPhase", "submit_unsigned", raw_solution, witness);
        }
        
        /// <summary>
        /// >> set_minimum_untrusted_score
        /// </summary>
        public GenericExtrinsicCall SetMinimumUntrustedScore(BaseOpt<SubstrateNetApi.Model.Base.Arr3U128> maybe_next_score)
        {
            return new GenericExtrinsicCall("ElectionProviderMultiPhase", "set_minimum_untrusted_score", maybe_next_score);
        }
        
        /// <summary>
        /// >> set_emergency_election_result
        /// </summary>
        public GenericExtrinsicCall SetEmergencyElectionResult(BaseVec<BaseTuple<SubstrateNetApi.Model.SpCore.AccountId32,SubstrateNetApi.Model.SpNposElections.Support>> supports)
        {
            return new GenericExtrinsicCall("ElectionProviderMultiPhase", "set_emergency_election_result", supports);
        }
        
        /// <summary>
        /// >> submit
        /// </summary>
        public GenericExtrinsicCall Submit(SubstrateNetApi.Model.PalletElectionProviderMultiPhase.RawSolution raw_solution, SubstrateNetApi.Model.Types.Primitive.U32 num_signed_submissions)
        {
            return new GenericExtrinsicCall("ElectionProviderMultiPhase", "submit", raw_solution, num_signed_submissions);
        }
    }
}
