//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletContracts;
using SubstrateNetApi.Model.PrimitiveTypes;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletContracts
{
    
    
    public sealed class PalletContractsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public PalletContractsStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> PristineCode
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>> PristineCode(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "PristineCode", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.Types.Primitive.U8>>(parameters, token);
        }
        
        /// <summary>
        /// >> CodeStorage
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletContracts.PrefabWasmModule> CodeStorage(SubstrateNetApi.Model.PrimitiveTypes.H256 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "CodeStorage", Storage.Type.Map, new[] {Storage.Hasher.Identity}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletContracts.PrefabWasmModule>(parameters, token);
        }
        
        /// <summary>
        /// >> AccountCounter
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U64> AccountCounter(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Contracts", "AccountCounter", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U64>(parameters, token);
        }
        
        /// <summary>
        /// >> ContractInfoOf
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletContracts.RawContractInfo> ContractInfoOf(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Contracts", "ContractInfoOf", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletContracts.RawContractInfo>(parameters, token);
        }
        
        /// <summary>
        /// >> DeletionQueue
        /// </summary>
        public async Task<BaseVec<SubstrateNetApi.Model.PalletContracts.DeletedContract>> DeletionQueue(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Contracts", "DeletionQueue", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseVec<SubstrateNetApi.Model.PalletContracts.DeletedContract>>(parameters, token);
        }
    }
}
