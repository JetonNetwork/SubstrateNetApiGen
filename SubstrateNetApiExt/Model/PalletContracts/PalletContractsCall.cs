//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Calls;
using SubstrateNetApi.Model.Types.Base;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.PalletContracts
{
    
    
    /// <summary>
    /// >> Path: pallet_contracts.pallet.Call
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class PalletContractsCall
    {
        
        /// <summary>
        /// >> Extrinsic: call
        /// Makes a call to an account, optionally transferring some balance.
        /// 
        /// * If the account is a smart-contract account, the associated code will be
        /// executed and any value will be transferred.
        /// * If the account is a regular account, any value will be transferred.
        /// * If no account exists and the call value is not less than `existential_deposit`,
        /// a regular account will be created and any value will be transferred.
        /// </summary>
        public GenericExtrinsicCall Call(SubstrateNetApi.Model.SpRuntime.EnumMultiAddress dest, BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> value, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data)
        {
            return new GenericExtrinsicCall("Contracts", "call", dest, value, gas_limit, data);
        }
        
        /// <summary>
        /// >> Extrinsic: instantiate_with_code
        /// Instantiates a new contract from the supplied `code` optionally transferring
        /// some balance.
        /// 
        /// This is the only function that can deploy new code to the chain.
        /// 
        /// # Parameters
        /// 
        /// * `endowment`: The balance to transfer from the `origin` to the newly created contract.
        /// * `gas_limit`: The gas limit enforced when executing the constructor.
        /// * `code`: The contract code to deploy in raw bytes.
        /// * `data`: The input data to pass to the contract constructor.
        /// * `salt`: Used for the address derivation. See [`Pallet::contract_address`].
        /// 
        /// Instantiation is executed as follows:
        /// 
        /// - The supplied `code` is instrumented, deployed, and a `code_hash` is created for that
        ///   code.
        /// - If the `code_hash` already exists on the chain the underlying `code` will be shared.
        /// - The destination address is computed based on the sender, code_hash and the salt.
        /// - The smart-contract account is created at the computed address.
        /// - The `endowment` is transferred to the new account.
        /// - The `deploy` function is executed in the context of the newly-created account.
        /// </summary>
        public GenericExtrinsicCall InstantiateWithCode(BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> endowment, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> code, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> salt)
        {
            return new GenericExtrinsicCall("Contracts", "instantiate_with_code", endowment, gas_limit, code, data, salt);
        }
        
        /// <summary>
        /// >> Extrinsic: instantiate
        /// Instantiates a contract from a previously deployed wasm binary.
        /// 
        /// This function is identical to [`Self::instantiate_with_code`] but without the
        /// code deployment step. Instead, the `code_hash` of an on-chain deployed wasm binary
        /// must be supplied.
        /// </summary>
        public GenericExtrinsicCall Instantiate(BaseCom<SubstrateNetApi.Model.Types.Primitive.U128> endowment, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> gas_limit, SubstrateNetApi.Model.PrimitiveTypes.H256 code_hash, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> data, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> salt)
        {
            return new GenericExtrinsicCall("Contracts", "instantiate", endowment, gas_limit, code_hash, data, salt);
        }
    }
}
