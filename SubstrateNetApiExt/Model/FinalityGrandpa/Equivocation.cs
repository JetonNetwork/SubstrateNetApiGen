//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.FinalityGrandpa;
using SubstrateNetApi.Model.SpFinalityGrandpa;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.FinalityGrandpa
{
    
    
    /// <summary>
    /// >> 228 - Composite[finality_grandpa.Equivocation]
    /// </summary>
    public sealed class Equivocation : BaseType
    {
        
        /// <summary>
        /// >> round_number
        /// </summary>
        private SubstrateNetApi.Model.Types.Primitive.U64 _roundNumber;
        
        /// <summary>
        /// >> identity
        /// </summary>
        private SubstrateNetApi.Model.SpFinalityGrandpa.Public _identity;
        
        /// <summary>
        /// >> first
        /// </summary>
        private BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature> _first;
        
        /// <summary>
        /// >> second
        /// </summary>
        private BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature> _second;
        
        public SubstrateNetApi.Model.Types.Primitive.U64 RoundNumber
        {
            get
            {
                return this._roundNumber;
            }
            set
            {
                this._roundNumber = value;
            }
        }
        
        public SubstrateNetApi.Model.SpFinalityGrandpa.Public Identity
        {
            get
            {
                return this._identity;
            }
            set
            {
                this._identity = value;
            }
        }
        
        public BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature> First
        {
            get
            {
                return this._first;
            }
            set
            {
                this._first = value;
            }
        }
        
        public BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature> Second
        {
            get
            {
                return this._second;
            }
            set
            {
                this._second = value;
            }
        }
        
        public override string TypeName()
        {
            return "Equivocation";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(RoundNumber.Encode());
            result.AddRange(Identity.Encode());
            result.AddRange(First.Encode());
            result.AddRange(Second.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            RoundNumber = new SubstrateNetApi.Model.Types.Primitive.U64();
            RoundNumber.Decode(byteArray, ref p);
            Identity = new SubstrateNetApi.Model.SpFinalityGrandpa.Public();
            Identity.Decode(byteArray, ref p);
            First = new BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature>();
            First.Decode(byteArray, ref p);
            Second = new BaseTuple<SubstrateNetApi.Model.FinalityGrandpa.Precommit,SubstrateNetApi.Model.SpFinalityGrandpa.Signature>();
            Second.Decode(byteArray, ref p);
            TypeSize = p - start;
        }
    }
}
