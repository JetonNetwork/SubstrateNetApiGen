//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Composite;
using SubstrateNetApi.Model.Types.Enum;
using SubstrateNetApi.Model.Types.Primitive;
using SubstrateNetApi.Model.Types.Sequence;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.Types.Composite
{
    
    
    /// <summary>
    /// >> Path: sp_consensus_babe.BabeEpochConfiguration
    /// </summary>
    public sealed class BabeEpochConfiguration : BaseType
    {
        
        private BaseTuple<U64,U64> _c;
        
        private EnumAllowedSlots _allowedSlots;
        
        public BaseTuple<U64,U64> C
        {
            get
            {
                return this._c;
            }
            set
            {
                this._c = value;
            }
        }
        
        public EnumAllowedSlots AllowedSlots
        {
            get
            {
                return this._allowedSlots;
            }
            set
            {
                this._allowedSlots = value;
            }
        }
        
        public override string TypeName()
        {
            return "BabeEpochConfiguration";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(C.Encode());
            result.AddRange(AllowedSlots.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            C = new BaseTuple<U64,U64>();
            C.Decode(byteArray, ref p);
            AllowedSlots = new EnumAllowedSlots();
            AllowedSlots.Decode(byteArray, ref p);
            _typeSize = p - start;
        }
    }
}
