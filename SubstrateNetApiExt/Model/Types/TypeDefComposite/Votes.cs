//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using SubstrateNetApi.Model.Types.TypeDefArray;
using SubstrateNetApi.Model.Types.TypeDefComposite;
using SubstrateNetApi.Model.Types.TypeDefVariant;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.Types.TypeDefComposite
{
    
    
    public sealed class Votes : BaseType
    {
        
        private U32 _index;
        
        private U32 _threshold;
        
        private BaseVec<AccountId32> _ayes;
        
        private BaseVec<AccountId32> _nays;
        
        private U32 _end;
        
        public U32 Index
        {
            get
            {
                return this._index;
            }
            set
            {
                this._index = value;
            }
        }
        
        public U32 Threshold
        {
            get
            {
                return this._threshold;
            }
            set
            {
                this._threshold = value;
            }
        }
        
        public BaseVec<AccountId32> Ayes
        {
            get
            {
                return this._ayes;
            }
            set
            {
                this._ayes = value;
            }
        }
        
        public BaseVec<AccountId32> Nays
        {
            get
            {
                return this._nays;
            }
            set
            {
                this._nays = value;
            }
        }
        
        public U32 End
        {
            get
            {
                return this._end;
            }
            set
            {
                this._end = value;
            }
        }
        
        public override string TypeName()
        {
            return "Votes";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Index.Encode());
            result.AddRange(Threshold.Encode());
            result.AddRange(Ayes.Encode());
            result.AddRange(Nays.Encode());
            result.AddRange(End.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Index = new U32();
            Index.Decode(byteArray, ref p);
            Threshold = new U32();
            Threshold.Decode(byteArray, ref p);
            Ayes = new BaseVec<AccountId32>();
            Ayes.Decode(byteArray, ref p);
            Nays = new BaseVec<AccountId32>();
            Nays.Decode(byteArray, ref p);
            End = new U32();
            End.Decode(byteArray, ref p);
            _typeSize = p - start;
        }
    }
}
