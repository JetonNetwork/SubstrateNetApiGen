//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using SubstrateNetApi.Model.Types.TypeDefArray;
using SubstrateNetApi.Model.Types.TypeDefComposite;
using SubstrateNetApi.Model.Types.TypeDefVariant;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.Types.TypeDefComposite
{
    
    
    public sealed class MembershipProof : BaseType
    {
        
        private U32 _session;
        
        private BaseVec<BaseVec<U8>> _trieNodes;
        
        private U32 _validatorCount;
        
        public U32 Session
        {
            get
            {
                return this._session;
            }
            set
            {
                this._session = value;
            }
        }
        
        public BaseVec<BaseVec<U8>> TrieNodes
        {
            get
            {
                return this._trieNodes;
            }
            set
            {
                this._trieNodes = value;
            }
        }
        
        public U32 ValidatorCount
        {
            get
            {
                return this._validatorCount;
            }
            set
            {
                this._validatorCount = value;
            }
        }
        
        public override string TypeName()
        {
            return "MembershipProof";
        }
        
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Session.Encode());
            result.AddRange(TrieNodes.Encode());
            result.AddRange(ValidatorCount.Encode());
            return result.ToArray();
        }
        
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Session = new U32();
            Session.Decode(byteArray, ref p);
            TrieNodes = new BaseVec<BaseVec<U8>>();
            TrieNodes.Decode(byteArray, ref p);
            ValidatorCount = new U32();
            ValidatorCount.Decode(byteArray, ref p);
            _typeSize = p - start;
        }
    }
}
