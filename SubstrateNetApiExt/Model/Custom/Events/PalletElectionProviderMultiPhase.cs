//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Composite;
using SubstrateNetApi.Model.Types.Enum;
using SubstrateNetApi.Model.Types.Primitive;
using SubstrateNetApi.Model.Types.Sequence;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.Custom.Events
{
    
    
    /// <summary>
    /// >> Path: pallet_election_provider_multi_phase.pallet.Event
    /// 
    ///			The [event](https://substrate.dev/docs/en/knowledgebase/runtime/events) emitted
    ///			by this pallet.
    ///			
    /// </summary>
    public sealed class PalletElectionProviderMultiPhase
    {
        
        /// <summary>
        /// >> Event: SolutionStored
        /// A solution was stored with the given compute.
        /// 
        /// If the solution is signed, this means that it hasn't yet been processed. If the
        /// solution is unsigned, this means that it has also been processed.
        /// 
        /// The `bool` is `true` when a previous solution was ejected to make room for this one.
        /// </summary>
        public sealed class SolutionStored : BaseTuple<EnumElectionCompute, Bool>
        {
        }
        
        /// <summary>
        /// >> Event: ElectionFinalized
        /// The election has been finalized, with `Some` of the given computation, or else if the
        /// election failed, `None`.
        /// </summary>
        public sealed class ElectionFinalized : BaseTuple<BaseOpt<EnumElectionCompute>>
        {
        }
        
        /// <summary>
        /// >> Event: Rewarded
        /// An account has been rewarded for their signed submission being finalized.
        /// </summary>
        public sealed class Rewarded : BaseTuple<AccountId32, U128>
        {
        }
        
        /// <summary>
        /// >> Event: Slashed
        /// An account has been slashed for submitting an invalid signed submission.
        /// </summary>
        public sealed class Slashed : BaseTuple<AccountId32, U128>
        {
        }
        
        /// <summary>
        /// >> Event: SignedPhaseStarted
        /// The signed phase of the given round has started.
        /// </summary>
        public sealed class SignedPhaseStarted : BaseTuple<U32>
        {
        }
        
        /// <summary>
        /// >> Event: UnsignedPhaseStarted
        /// The unsigned phase of the given round has started.
        /// </summary>
        public sealed class UnsignedPhaseStarted : BaseTuple<U32>
        {
        }
    }
}
