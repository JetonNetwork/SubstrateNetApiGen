//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Meta;
using SubstrateNetApi.Model.PalletLottery;
using SubstrateNetApi.Model.SpCore;
using SubstrateNetApi.Model.Types;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace SubstrateNetApi.Model.PalletLottery
{
    
    
    public sealed class PalletLotteryStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateNetApi.SubstrateClient _client;
        
        public PalletLotteryStorage(SubstrateNetApi.SubstrateClient client)
        {
            this._client = client;
        }
        
        /// <summary>
        /// >> LotteryIndex
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> LotteryIndex(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Lottery", "LotteryIndex", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> Lottery
        /// </summary>
        public async Task<SubstrateNetApi.Model.PalletLottery.LotteryConfig> Lottery(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Lottery", "Lottery", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.PalletLottery.LotteryConfig>(parameters, token);
        }
        
        /// <summary>
        /// >> Participants
        /// </summary>
        public async Task<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U8,SubstrateNetApi.Model.Types.Primitive.U8>>>> Participants(SubstrateNetApi.Model.SpCore.AccountId32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Lottery", "Participants", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U32,BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U8,SubstrateNetApi.Model.Types.Primitive.U8>>>>(parameters, token);
        }
        
        /// <summary>
        /// >> TicketsCount
        /// </summary>
        public async Task<SubstrateNetApi.Model.Types.Primitive.U32> TicketsCount(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Lottery", "TicketsCount", Storage.Type.Plain);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.Types.Primitive.U32>(parameters, token);
        }
        
        /// <summary>
        /// >> Tickets
        /// </summary>
        public async Task<SubstrateNetApi.Model.SpCore.AccountId32> Tickets(SubstrateNetApi.Model.Types.Primitive.U32 key, CancellationToken token)
        {
            var keyParams = new IType[] { key };
            var parameters = RequestGenerator.GetStorage("Lottery", "Tickets", Storage.Type.Map, new[] {Storage.Hasher.Twox64Concat}, keyParams);
            return await _client.GetStorageAsync<SubstrateNetApi.Model.SpCore.AccountId32>(parameters, token);
        }
        
        /// <summary>
        /// >> CallIndices
        /// </summary>
        public async Task<BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U8,SubstrateNetApi.Model.Types.Primitive.U8>>> CallIndices(CancellationToken token)
        {
            var parameters = RequestGenerator.GetStorage("Lottery", "CallIndices", Storage.Type.Plain);
            return await _client.GetStorageAsync<BaseVec<BaseTuple<SubstrateNetApi.Model.Types.Primitive.U8,SubstrateNetApi.Model.Types.Primitive.U8>>>(parameters, token);
        }
    }
}
