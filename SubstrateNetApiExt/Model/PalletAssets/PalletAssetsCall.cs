//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using SubstrateNetApi.Model.Calls;
using SubstrateNetApi.Model.PalletAssets;
using SubstrateNetApi.Model.SpRuntime;
using SubstrateNetApi.Model.Types.Base;
using SubstrateNetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;


namespace SubstrateNetApi.Model.PalletAssets
{
    
    
    /// <summary>
    /// >> 295 - Variant[pallet_assets.pallet.Call]
    /// Contains one variant per dispatchable that can be called by an extrinsic.
    /// </summary>
    public sealed class PalletAssetsCall
    {
        
        /// <summary>
        /// >> create
        /// </summary>
        public GenericExtrinsicCall Create(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress admin, SubstrateNetApi.Model.Types.Primitive.U64 min_balance)
        {
            return new GenericExtrinsicCall("Assets", "create", id, admin, min_balance);
        }
        
        /// <summary>
        /// >> force_create
        /// </summary>
        public GenericExtrinsicCall ForceCreate(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress owner, SubstrateNetApi.Model.Types.Primitive.Bool is_sufficient, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> min_balance)
        {
            return new GenericExtrinsicCall("Assets", "force_create", id, owner, is_sufficient, min_balance);
        }
        
        /// <summary>
        /// >> destroy
        /// </summary>
        public GenericExtrinsicCall Destroy(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.PalletAssets.DestroyWitness witness)
        {
            return new GenericExtrinsicCall("Assets", "destroy", id, witness);
        }
        
        /// <summary>
        /// >> mint
        /// </summary>
        public GenericExtrinsicCall Mint(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress beneficiary, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "mint", id, beneficiary, amount);
        }
        
        /// <summary>
        /// >> burn
        /// </summary>
        public GenericExtrinsicCall Burn(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress who, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "burn", id, who, amount);
        }
        
        /// <summary>
        /// >> transfer
        /// </summary>
        public GenericExtrinsicCall Transfer(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress target, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "transfer", id, target, amount);
        }
        
        /// <summary>
        /// >> transfer_keep_alive
        /// </summary>
        public GenericExtrinsicCall TransferKeepAlive(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress target, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "transfer_keep_alive", id, target, amount);
        }
        
        /// <summary>
        /// >> force_transfer
        /// </summary>
        public GenericExtrinsicCall ForceTransfer(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress source, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress dest, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "force_transfer", id, source, dest, amount);
        }
        
        /// <summary>
        /// >> freeze
        /// </summary>
        public GenericExtrinsicCall Freeze(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress who)
        {
            return new GenericExtrinsicCall("Assets", "freeze", id, who);
        }
        
        /// <summary>
        /// >> thaw
        /// </summary>
        public GenericExtrinsicCall Thaw(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress who)
        {
            return new GenericExtrinsicCall("Assets", "thaw", id, who);
        }
        
        /// <summary>
        /// >> freeze_asset
        /// </summary>
        public GenericExtrinsicCall FreezeAsset(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id)
        {
            return new GenericExtrinsicCall("Assets", "freeze_asset", id);
        }
        
        /// <summary>
        /// >> thaw_asset
        /// </summary>
        public GenericExtrinsicCall ThawAsset(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id)
        {
            return new GenericExtrinsicCall("Assets", "thaw_asset", id);
        }
        
        /// <summary>
        /// >> transfer_ownership
        /// </summary>
        public GenericExtrinsicCall TransferOwnership(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress owner)
        {
            return new GenericExtrinsicCall("Assets", "transfer_ownership", id, owner);
        }
        
        /// <summary>
        /// >> set_team
        /// </summary>
        public GenericExtrinsicCall SetTeam(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress issuer, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress admin, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress freezer)
        {
            return new GenericExtrinsicCall("Assets", "set_team", id, issuer, admin, freezer);
        }
        
        /// <summary>
        /// >> set_metadata
        /// </summary>
        public GenericExtrinsicCall SetMetadata(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> name, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> symbol, SubstrateNetApi.Model.Types.Primitive.U8 decimals)
        {
            return new GenericExtrinsicCall("Assets", "set_metadata", id, name, symbol, decimals);
        }
        
        /// <summary>
        /// >> clear_metadata
        /// </summary>
        public GenericExtrinsicCall ClearMetadata(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id)
        {
            return new GenericExtrinsicCall("Assets", "clear_metadata", id);
        }
        
        /// <summary>
        /// >> force_set_metadata
        /// </summary>
        public GenericExtrinsicCall ForceSetMetadata(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> name, BaseVec<SubstrateNetApi.Model.Types.Primitive.U8> symbol, SubstrateNetApi.Model.Types.Primitive.U8 decimals, SubstrateNetApi.Model.Types.Primitive.Bool is_frozen)
        {
            return new GenericExtrinsicCall("Assets", "force_set_metadata", id, name, symbol, decimals, is_frozen);
        }
        
        /// <summary>
        /// >> force_clear_metadata
        /// </summary>
        public GenericExtrinsicCall ForceClearMetadata(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id)
        {
            return new GenericExtrinsicCall("Assets", "force_clear_metadata", id);
        }
        
        /// <summary>
        /// >> force_asset_status
        /// </summary>
        public GenericExtrinsicCall ForceAssetStatus(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress owner, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress issuer, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress admin, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress freezer, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> min_balance, SubstrateNetApi.Model.Types.Primitive.Bool is_sufficient, SubstrateNetApi.Model.Types.Primitive.Bool is_frozen)
        {
            return new GenericExtrinsicCall("Assets", "force_asset_status", id, owner, issuer, admin, freezer, min_balance, is_sufficient, is_frozen);
        }
        
        /// <summary>
        /// >> approve_transfer
        /// </summary>
        public GenericExtrinsicCall ApproveTransfer(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress @delegate, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "approve_transfer", id, @delegate, amount);
        }
        
        /// <summary>
        /// >> cancel_approval
        /// </summary>
        public GenericExtrinsicCall CancelApproval(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress @delegate)
        {
            return new GenericExtrinsicCall("Assets", "cancel_approval", id, @delegate);
        }
        
        /// <summary>
        /// >> force_cancel_approval
        /// </summary>
        public GenericExtrinsicCall ForceCancelApproval(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress owner, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress @delegate)
        {
            return new GenericExtrinsicCall("Assets", "force_cancel_approval", id, owner, @delegate);
        }
        
        /// <summary>
        /// >> transfer_approved
        /// </summary>
        public GenericExtrinsicCall TransferApproved(BaseCom<SubstrateNetApi.Model.Types.Primitive.U32> id, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress owner, SubstrateNetApi.Model.SpRuntime.EnumMultiAddress destination, BaseCom<SubstrateNetApi.Model.Types.Primitive.U64> amount)
        {
            return new GenericExtrinsicCall("Assets", "transfer_approved", id, owner, destination, amount);
        }
    }
}
